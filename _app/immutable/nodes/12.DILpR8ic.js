import{s as D,n as k,o as R}from"../chunks/scheduler.ewnsoiP_.js";import{S as I,i as M,e as U,c as E,d as O,f as A,k as v,l as F}from"../chunks/index.vq2OC-AM.js";import{L as G,F as T,k as P,g as N,A as H,B as C,C as B,ai as W,aj as x,V as j,H as S,ak as z,x as q,al as V,D as X,X as J,am as Y,an as $,ao as K}from"../chunks/three.module.CvVa4e-M.js";import{O as Z}from"../chunks/OrbitControls.DxRuHF5a.js";import{G as Q}from"../chunks/GLTFLoader.ChyF0Veo.js";const _=new WeakMap;class ee extends G{constructor(e){super(e),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(e){return this.decoderPath=e,this}setDecoderConfig(e){return this.decoderConfig=e,this}setWorkerLimit(e){return this.workerLimit=e,this}load(e,s,r,o){const n=new T(this.manager);n.setPath(this.path),n.setResponseType("arraybuffer"),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(e,t=>{this.parse(t,s,o)},r,o)}parse(e,s,r=()=>{}){this.decodeDracoFile(e,s,null,null,P).catch(r)}decodeDracoFile(e,s,r,o,n=N,t=()=>{}){const c={attributeIDs:r||this.defaultAttributeIDs,attributeTypes:o||this.defaultAttributeTypes,useUniqueIDs:!!r,vertexColorSpace:n};return this.decodeGeometry(e,c).then(s).catch(t)}decodeGeometry(e,s){const r=JSON.stringify(s);if(_.has(e)){const i=_.get(e);if(i.key===r)return i.promise;if(e.byteLength===0)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let o;const n=this.workerNextTaskID++,t=e.byteLength,c=this._getWorker(n,t).then(i=>(o=i,new Promise((h,l)=>{o._callbacks[n]={resolve:h,reject:l},o.postMessage({type:"decode",id:n,taskConfig:s,buffer:e},[e])}))).then(i=>this._createGeometry(i.geometry));return c.catch(()=>!0).then(()=>{o&&n&&this._releaseTask(o,n)}),_.set(e,{key:r,promise:c}),c}_createGeometry(e){const s=new H;e.index&&s.setIndex(new C(e.index.array,1));for(let r=0;r<e.attributes.length;r++){const o=e.attributes[r],n=o.name,t=o.array,c=o.itemSize,i=new C(t,c);n==="color"&&(this._assignVertexColorSpace(i,o.vertexColorSpace),i.normalized=!(t instanceof Float32Array)),s.setAttribute(n,i)}return s}_assignVertexColorSpace(e,s){if(s!==P)return;const r=new B;for(let o=0,n=e.count;o<n;o++)r.fromBufferAttribute(e,o).convertSRGBToLinear(),e.setXYZ(o,r.r,r.g,r.b)}_loadLibrary(e,s){const r=new T(this.manager);return r.setPath(this.decoderPath),r.setResponseType(s),r.setWithCredentials(this.withCredentials),new Promise((o,n)=>{r.load(e,o,void 0,n)})}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const e=typeof WebAssembly!="object"||this.decoderConfig.type==="js",s=[];return e?s.push(this._loadLibrary("draco_decoder.js","text")):(s.push(this._loadLibrary("draco_wasm_wrapper.js","text")),s.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(s).then(r=>{const o=r[0];e||(this.decoderConfig.wasmBinary=r[1]);const n=te.toString(),t=["/* draco decoder */",o,"","/* worker */",n.substring(n.indexOf("{")+1,n.lastIndexOf("}"))].join(`
`);this.workerSourceURL=URL.createObjectURL(new Blob([t]))}),this.decoderPending}_getWorker(e,s){return this._initDecoder().then(()=>{if(this.workerPool.length<this.workerLimit){const o=new Worker(this.workerSourceURL);o._callbacks={},o._taskCosts={},o._taskLoad=0,o.postMessage({type:"init",decoderConfig:this.decoderConfig}),o.onmessage=function(n){const t=n.data;switch(t.type){case"decode":o._callbacks[t.id].resolve(t);break;case"error":o._callbacks[t.id].reject(t);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+t.type+'"')}},this.workerPool.push(o)}else this.workerPool.sort(function(o,n){return o._taskLoad>n._taskLoad?-1:1});const r=this.workerPool[this.workerPool.length-1];return r._taskCosts[e]=s,r._taskLoad+=s,r})}_releaseTask(e,s){e._taskLoad-=e._taskCosts[s],delete e._callbacks[s],delete e._taskCosts[s]}debug(){console.log("Task load: ",this.workerPool.map(e=>e._taskLoad))}dispose(){for(let e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,this.workerSourceURL!==""&&URL.revokeObjectURL(this.workerSourceURL),this}}function te(){let p,e;onmessage=function(t){const c=t.data;switch(c.type){case"init":p=c.decoderConfig,e=new Promise(function(l){p.onModuleLoaded=function(d){l({draco:d})},DracoDecoderModule(p)});break;case"decode":const i=c.buffer,h=c.taskConfig;e.then(l=>{const d=l.draco,a=new d.Decoder;try{const u=s(d,a,new Int8Array(i),h),f=u.attributes.map(m=>m.array.buffer);u.index&&f.push(u.index.array.buffer),self.postMessage({type:"decode",id:c.id,geometry:u},f)}catch(u){console.error(u),self.postMessage({type:"error",id:c.id,error:u.message})}finally{d.destroy(a)}});break}};function s(t,c,i,h){const l=h.attributeIDs,d=h.attributeTypes;let a,u;const f=c.GetEncodedGeometryType(i);if(f===t.TRIANGULAR_MESH)a=new t.Mesh,u=c.DecodeArrayToMesh(i,i.byteLength,a);else if(f===t.POINT_CLOUD)a=new t.PointCloud,u=c.DecodeArrayToPointCloud(i,i.byteLength,a);else throw new Error("THREE.DRACOLoader: Unexpected geometry type.");if(!u.ok()||a.ptr===0)throw new Error("THREE.DRACOLoader: Decoding failed: "+u.error_msg());const m={index:null,attributes:[]};for(const w in l){const y=self[d[w]];let g,b;if(h.useUniqueIDs)b=l[w],g=c.GetAttributeByUniqueId(a,b);else{if(b=c.GetAttributeId(a,t[l[w]]),b===-1)continue;g=c.GetAttribute(a,b)}const L=o(t,c,a,w,y,g);w==="color"&&(L.vertexColorSpace=h.vertexColorSpace),m.attributes.push(L)}return f===t.TRIANGULAR_MESH&&(m.index=r(t,c,a)),t.destroy(a),m}function r(t,c,i){const l=i.num_faces()*3,d=l*4,a=t._malloc(d);c.GetTrianglesUInt32Array(i,d,a);const u=new Uint32Array(t.HEAPF32.buffer,a,l).slice();return t._free(a),{array:u,itemSize:1}}function o(t,c,i,h,l,d){const a=d.num_components(),f=i.num_points()*a,m=f*l.BYTES_PER_ELEMENT,w=n(t,l),y=t._malloc(m);c.GetAttributeDataArrayForAllPoints(i,d,w,m,y);const g=new l(t.HEAPF32.buffer,y,f).slice();return t._free(y),{name:h,array:g,itemSize:a}}function n(t,c){switch(c){case Float32Array:return t.DT_FLOAT32;case Int8Array:return t.DT_INT8;case Int16Array:return t.DT_INT16;case Int32Array:return t.DT_INT32;case Uint8Array:return t.DT_UINT8;case Uint16Array:return t.DT_UINT16;case Uint32Array:return t.DT_UINT32}}}function se(p){let e;return{c(){e=U("canvas"),this.h()},l(s){e=E(s,"CANVAS",{class:!0}),O(e).forEach(A),this.h()},h(){v(e,"class","webgl")},m(s,r){F(s,e,r)},p:k,i:k,o:k,d(s){s&&A(e)}}}function oe(p){return R(()=>{const e=document.querySelector("canvas.webgl"),s=new W,r=new Q,o=new ee;o.setDecoderPath("/draco/"),r.setDRACOLoader(o);let n=null;r.load("/models/fox/Fox.gltf",d=>{n=new x(d.scene);const a={survey:d.animations[0],walk:d.animations[1],run:d.animations[2]},u=n.clipAction(a.run);console.log("fox action: ",u),u.play(),d.scene.scale.set(.025,.025,.025),console.log("Fox: ",d)}),r.load("/models/chisato/chisato-transformed.glb",d=>{d.scene.quaternion.setFromAxisAngle(new j(-1,0,0),Math.PI*-.5),d.scene.traverse(a=>{a instanceof S&&a.isMesh&&(a.castShadow=!0)}),console.log("Chisato: ",d),d.scene.scale.set(1.5,1.5,1.5),s.add(d.scene)});const t=new S(new z(10,10),new q({color:"#444444",metalness:0,roughness:.5}));t.receiveShadow=!0,t.rotation.x=-Math.PI*.5,s.add(t);const c=new V(16777215,.8);s.add(c);const i=new X(16777215,.6);i.castShadow=!0,i.shadow.mapSize.set(1024,1024),i.shadow.camera.far=15,i.shadow.camera.left=-7,i.shadow.camera.top=7,i.shadow.camera.right=7,i.shadow.camera.bottom=-7,i.position.set(5,5,5),s.add(i);const h={width:window.innerWidth,height:window.innerHeight},l=new J(75,h.width/h.height,.1,100);if(l.position.set(2,2,2),s.add(l),e instanceof HTMLElement){const d=new Z(l,e);d.target.set(0,.75,0),d.enableDamping=!0;const a=new Y({canvas:e});a.shadowMap.enabled=!0,a.shadowMap.type=$,a.setSize(h.width,h.height),a.setPixelRatio(Math.min(window.devicePixelRatio,2)),window.addEventListener("resize",()=>{h.width=window.innerWidth,h.height=window.innerHeight,l.aspect=h.width/h.height,l.updateProjectionMatrix(),a.setSize(h.width,h.height),a.setPixelRatio(Math.min(window.devicePixelRatio,2))});const u=new K;let f=0;const m=()=>{const w=u.getElapsedTime(),y=w-f;f=w,n instanceof x&&n.update(y),d.update(),a.render(s,l),window.requestAnimationFrame(m)};m()}}),[]}class de extends I{constructor(e){super(),M(this,e,oe,se,D,{})}}export{de as component};
